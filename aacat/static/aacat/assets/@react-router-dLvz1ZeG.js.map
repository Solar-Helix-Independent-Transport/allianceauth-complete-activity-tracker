{"version":3,"file":"@react-router-dLvz1ZeG.js","sources":["../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../../node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/prop-types/index.js","../../../node_modules/@remix-run/router/dist/router.js","../../../node_modules/react-router/dist/index.js","../../../node_modules/react-router-dom/dist/index.js","../../../node_modules/react-router-bootstrap/LinkContainer.js","../../../node_modules/react-router-bootstrap/index.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * @remix-run/router v1.14.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = safelyDecodeURIComponent(value || \"\", paramName);\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === matches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized;\n  let hasLazyRoutes = initialMatches.some(m => m.route.lazy);\n  let hasLoaders = initialMatches.some(m => m.route.loader);\n  if (hasLazyRoutes) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!hasLoaders) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    initialized = initialMatches.every(m => m.route.loader && m.route.loader.hydrate !== true && (loaderData && loaderData[m.route.id] !== undefined || errors && errors[m.route.id] !== undefined));\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      unstable_viewTransitionOpts: opts.viewTransitionOpts,\n      unstable_flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since iot's not a \"navigation\"\n    if (!isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration)) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, flushSync, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, flushSync, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(state, actionResult, {\n            fetcherSubmission: submission\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, flushSync, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true\n    });\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, future.v7_relativeSplatPath, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isInitialLoad, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (isInitialLoad) {\n      if (route.loader.hydrate) {\n        return true;\n      }\n      return state.loaderData[route.id] === undefined && (\n      // Don't re-run if the loader ran and threw an error\n      !state.errors || state.errors[route.id] === undefined);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (isInitialLoad || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, v7_relativeSplatPath, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location, v7_relativeSplatPath);\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse = {\n        type: resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result\n      };\n      throw queryRouteResponse;\n    }\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || obj.type === ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.21.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.21.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_flushSync: flushSync,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        unstable_flushSync: options.unstable_flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_flushSync: options.unstable_flushSync,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _excluded = [\"children\", \"onClick\", \"replace\", \"to\", \"state\", \"activeClassName\", \"className\", \"activeStyle\", \"style\", \"isActive\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\nvar LinkContainer = function LinkContainer(_ref) {\n  var children = _ref.children,\n      onClick = _ref.onClick,\n      replace = _ref.replace,\n      to = _ref.to,\n      state = _ref.state,\n      activeClassName = _ref.activeClassName,\n      className = _ref.className,\n      activeStyle = _ref.activeStyle,\n      style = _ref.style,\n      getIsActive = _ref.isActive,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var path = _typeof(to) === 'object' ? to.pathname || '' : to;\n  var navigate = (0, _reactRouterDom.useNavigate)();\n  var href = (0, _reactRouterDom.useHref)(typeof to === 'string' ? {\n    pathname: to\n  } : to);\n  var match = (0, _reactRouterDom.useMatch)(path);\n  var location = (0, _reactRouterDom.useLocation)();\n\n  var child = _react[\"default\"].Children.only(children);\n\n  var isActive = !!(getIsActive ? typeof getIsActive === 'function' ? getIsActive(match, location) : getIsActive : match);\n\n  var handleClick = function handleClick(event) {\n    if (children.props.onClick) {\n      children.props.onClick(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && // ignore right clicks\n    !isModifiedEvent(event) // ignore clicks with modifier keys\n    ) {\n      event.preventDefault();\n      navigate(to, {\n        replace: replace,\n        state: state\n      });\n    }\n  };\n\n  return /*#__PURE__*/_react[\"default\"].cloneElement(child, _objectSpread(_objectSpread({}, props), {}, {\n    className: [className, child.props.className, isActive ? activeClassName : null].join(' ').trim(),\n    style: isActive ? _objectSpread(_objectSpread({}, style), activeStyle) : style,\n    href: href,\n    onClick: handleClick\n  }));\n};\n\nLinkContainer.propTypes = {\n  children: _propTypes[\"default\"].element.isRequired,\n  onClick: _propTypes[\"default\"].func,\n  replace: _propTypes[\"default\"].bool,\n  to: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].object]).isRequired,\n  state: _propTypes[\"default\"].object,\n  className: _propTypes[\"default\"].string,\n  activeClassName: _propTypes[\"default\"].string,\n  style: _propTypes[\"default\"].objectOf(_propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number])),\n  activeStyle: _propTypes[\"default\"].objectOf(_propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number])),\n  isActive: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].bool])\n};\nLinkContainer.defaultProps = {\n  replace: false,\n  activeClassName: 'active',\n  onClick: null,\n  className: null,\n  style: null,\n  activeStyle: null,\n  isActive: null\n};\nvar _default = LinkContainer;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"LinkContainer\", {\n  enumerable: true,\n  get: function get() {\n    return _LinkContainer[\"default\"];\n  }\n});\n\nvar _LinkContainer = _interopRequireDefault(require(\"./LinkContainer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }"],"names":["ReactPropTypesSecret","ReactPropTypesSecret_1","require$$0","emptyFunction","emptyFunctionWithReset","factoryWithThrowingShims","shim","props","propName","componentName","location","propFullName","secret","err","getShim","ReactPropTypes","propTypesModule","_extends","target","i","source","key","Action","PopStateEventType","createMemoryHistory","options","initialEntries","initialIndex","v5Compat","entries","entry","index","createMemoryLocation","clampIndex","action","listener","n","getCurrentLocation","to","state","createLocation","warning","createHref","createPath","path","parsePath","nextLocation","delta","nextIndex","fn","createBrowserHistory","createBrowserLocation","window","globalHistory","pathname","search","hash","createBrowserHref","getUrlBasedHistory","createHashHistory","createHashLocation","createHashHref","base","href","url","hashIndex","validateHashLocation","invariant","value","message","cond","createKey","getHistoryState","current","_ref","parsedPath","searchIndex","getLocation","validateLocation","getIndex","handlePop","history","push","historyState","error","replace","createURL","ResultType","immutableRouteKeys","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","id","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","convertRouteMatchToUiMatch","match","loaderData","params","parentsMeta","flattenRoute","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","normalizePathname","generatePath","originalPath","prefix","stringify","p","array","keyMatch","optional","param","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","caseSensitive","regexpSource","_","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","headers","AbortedDeferredError","DeferredData","reject","r","onAbort","acc","_ref2","promise","undefinedError","aborted","settledKey","subscriber","v","k","signal","resolve","_ref3","unwrapTrackedPromise","isTrackedPromise","defer","redirect","redirectDocument","response","ErrorResponseImpl","status","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","IDLE_FETCHER","IDLE_BLOCKER","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","TRANSITIONS_STORAGE_KEY","createRouter","routerWindow","isBrowser","isServer","detectErrorBoundary","dataRoutes","inFlightDataRoutes","future","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","initialized","hasLazyRoutes","m","hasLoaders","errors","router","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","deletedFetchers","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","initialize","historyAction","blockerKey","shouldBlockNavigation","updateBlocker","blockers","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","dispose","deleteFetcher","deleteBlocker","subscribe","newState","opts","completedFetchers","deletedFetchersKeys","fetcher","completeNavigation","_temp","_location$state","_location$state2","flushSync","isActionReload","isMutationMethod","actionData","mergeLoaderData","preventScrollReset","viewTransitionOpts","priorPaths","toPaths","getSavedScrollPosition","navigate","normalizedPath","normalizeTo","submission","normalizeNavigateOptions","currentLocation","userReplace","revalidate","interruptActiveLoads","saveScrollPosition","routesToUse","loadingNavigation","notFoundMatches","cancelActiveDeferreds","isHashChangeOnly","request","createClientSideRequest","pendingActionData","pendingError","findNearestBoundary","actionOutput","handleAction","getLoadingNavigation","shortCircuited","handleLoaders","navigation","getSubmittingNavigation","actionMatch","getTargetMatch","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","isDeferredResult","overrideNavigation","fetcherSubmission","initialHydration","activeSubmission","getSubmissionFromNavigation","matchesToLoad","revalidatingFetchers","getMatchesToLoad","routeId","updatedFetchers","markFetchRedirectsDone","rf","revalidatingFetcher","getLoadingFetcher","abortFetcher","abortPendingFetchRevalidations","f","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","fetcherKey","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","fetch","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","doneFetcher","resolveDeferredData","_temp2","redirectLocation","isDocumentReload","redirectHistoryAction","formMethod","formAction","formEncType","currentMatches","fetchersToLoad","resolveDeferredResults","getFetcher","deleteFetcherAndUpdateState","count","controller","markFetchersDone","keys","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","_internalSetRoutes","newRoutes","isSubmissionNavigation","prependBasename","fromRouteId","relative","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","isValidMethod","getInvalidBodyError","rawFormMethod","stripHashFromPath","text","name","searchParams","formData","convertFormDataToSearchParams","convertSearchParamsToFormData","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","isInitialLoad","currentUrl","nextUrl","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","type","resultType","onReject","runHandler","handler","abortPromise","handlerError","values","e","isResponse","isSameBasename","contentType","isDeferredData","_result$init","_result$init2","processRouteLoaderData","statusCode","foundError","loaderHeaders","newLoaderData","mergedLoaderData","_temp5","method","errorMessage","deferred","signals","isRevalidatingLoader","unwrap","_window","transitions","sessionPositions","DataRouterContext","React.createContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useNavigationType","useMatch","React.useMemo","useIsomorphicLayoutEffect","cb","React.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","UNSAFE_getResolveToMatches","activeRef","React.useRef","React.useCallback","OutletContext","useOutletContext","useOutlet","context","outlet","React.createElement","useParams","routeMatch","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","React.Fragment","defaultErrorElement","RenderErrorBoundary","React.Component","errorInfo","RenderedRoute","routeContext","children","_dataRouterState2","_dataRouterState","errorIndex","renderFallback","fallbackIndex","needsToRunLoader","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","warningOnce","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","useNavigation","useRevalidator","useMatches","UNSAFE_convertRouteMatchToUiMatch","useLoaderData","useRouteLoaderData","useActionData","_state$errors","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","setBlockerKey","React.useState","React.useEffect","alreadyWarned","START_TRANSITION","startTransitionImpl","React","MemoryRouter","historyRef","setStateImpl","v7_startTransition","setState","Router","Navigate","_ref4","isStatic","jsonPath","Outlet","Route","_props","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","Await","_ref7","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","renderError","_ref8","toRender","React.Children","element","React.isValidElement","renderMatches","updates","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","isButtonElement","isFormElement","isInputElement","isModifiedEvent","event","shouldProcessLinkClick","createSearchParams","getSearchParamsForLocation","locationSearch","defaultSearchParams","_formDataSupportsSubmitter","isFormDataSubmitterSupported","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","body","attr","form","_excluded","_excluded2","_excluded3","createBrowserRouter","parseHydrationData","UNSAFE_mapRouteProperties","createHashRouter","deserializeErrors","serialized","val","UNSAFE_ErrorResponseImpl","ErrorConstructor","ViewTransitionContext","FetchersContext","FLUSH_SYNC","flushSyncImpl","ReactDOM","USE_ID","useIdImpl","startTransitionSafe","flushSyncSafe","Deferred","reason","RouterProvider","fallbackElement","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","optInStartTransition","isViewTransitionUnavailable","t","renderPromise","UNSAFE_DataRouterContext","UNSAFE_DataRouterStateContext","DataRoutes","UNSAFE_useRoutesImpl","BrowserRouter","HashRouter","HistoryRouter","Link","React.forwardRef","ref","onClick","reloadDocument","unstable_viewTransition","UNSAFE_NavigationContext","absoluteHref","isExternal","targetUrl","internalOnClick","useLinkClickHandler","handleClick","NavLink","ariaCurrentProp","classNameProp","styleProp","routerState","isTransitioning","useViewTransitionState","nextLocationPathname","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","className","style","Form","_ref9","forwardedRef","onSubmit","submit","useSubmit","useFormAction","submitHandler","submitter","submitMethod","ScrollRestoration","_ref10","storageKey","useScrollRestoration","replaceProp","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","fetcherId","getUniqueFetcherId","currentRouteId","UNSAFE_useRouteId","UNSAFE_RouteContext","useFetcher","_temp3","_route$matches","defaultKey","setFetcherKey","load","submitImpl","FetcherForm","useFetchers","_ref11","SCROLL_RESTORATION_STORAGE_KEY","_temp4","restoreScrollPosition","usePageHide","getKeyWithoutBasename","disableScrollRestoration","el","useBeforeUnload","callback","capture","usePrompt","_ref12","when","nextPath","exports","_react","_interopRequireDefault","_propTypes","require$$1","_reactRouterDom","require$$2","obj","ownKeys","enumerableOnly","symbols","sym","_objectSpread","_defineProperty","_typeof","_objectWithoutProperties","sourceSymbolKeys","LinkContainer","activeClassName","activeStyle","getIsActive","child","_default","_LinkContainer"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}
