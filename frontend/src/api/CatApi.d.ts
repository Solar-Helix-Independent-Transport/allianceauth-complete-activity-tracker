/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/cat/api/search/system/": {
    /** System Search */
    post: operations["aacat_api_system_search"];
  };
  "/cat/api/search/constellation/": {
    /** Constellation Search */
    post: operations["aacat_api_constellation_search"];
  };
  "/cat/api/search/region/": {
    /** Region Search */
    post: operations["aacat_api_region_search"];
  };
  "/cat/api/search/auth/group/": {
    /** Group Search */
    post: operations["aacat_api_group_search"];
  };
  "/cat/api/search/auth/character/": {
    /** Character Search */
    post: operations["aacat_api_character_search"];
  };
  "/cat/api/fleets/track": {
    /**
     * Track Me
     * @description Track any fleeets currently being run by the logged in user.
     */
    post: operations["aacat_api_track_me"];
  };
  "/cat/api/fleets/{character_id}/track": {
    /**
     * Track Character
     * @description Track the fleet being run by the character_id, if they are in a fleet.
     */
    post: operations["aacat_api_track_character"];
  };
  "/cat/api/fleets/{fleet_id}/end": {
    /**
     * End Fleet
     * @description Stop Tracking a fleet.
     */
    post: operations["aacat_api_end_fleet"];
  };
  "/cat/api/fleets/{fleet_id}/restart": {
    /**
     * Restart Fleet Tasks
     * @description Restart any fleet tasks that may have failed.
     */
    post: operations["aacat_api_restart_fleet_tasks"];
  };
  "/cat/api/fleets/active/": {
    /**
     * Get Fleets Active
     * @description Show all actively tracked fleets
     */
    get: operations["aacat_api_get_fleets_active"];
  };
  "/cat/api/fleets/recent/": {
    /**
     * Get Fleets Recent
     * @description Show a list of previously tracked fleets
     */
    get: operations["aacat_api_get_fleets_recent"];
  };
  "/cat/api/fleets/{fleet_id}/snapshot": {
    /**
     * Get Fleet Recent Snapshot
     * @description Provide teh most recent snapshot of a fleet
     */
    get: operations["aacat_api_get_fleet_recent_snapshot"];
  };
  "/cat/api/fleets/{fleet_id}/stats": {
    /**
     * Get Fleet Stats
     * @description Provide the most recent snapshot of a fleet grouped by ship types etc.
     */
    get: operations["aacat_api_get_fleet_stats"];
  };
  "/cat/api/fleets/{fleet_id}/time_diff/{minutes}": {
    /**
     * Get Fleet Time Diff
     * @description Provide the rolling changes of a fleets comp in the time period
     */
    get: operations["aacat_api_get_fleet_time_diff"];
  };
  "/cat/api/fleets/{fleet_id}/time_diff/{minutes}/mains": {
    /**
     * Get Fleet Time Diff Mains
     * @description Provide the rolling changes of a fleets members in the time period
     */
    get: operations["aacat_api_get_fleet_time_diff_mains"];
  };
  "/cat/api/fleets/{fleet_id}/character_changes": {
    /**
     * Get Fleet Character Changes
     * @description Provide an overview of fleet members who have left/joined late
     */
    get: operations["aacat_api_get_fleet_character_changes"];
  };
  "/cat/api/fleets/{character_id}/fleet_id": {
    /**
     * Get Fleet Id From Character Id
     * @description Get the fleet id a character is in.
     */
    get: operations["aacat_api_get_fleet_id_from_character_id"];
  };
  "/cat/api/fleets/{fleet_id}/details": {
    /**
     * Get Fleet Details
     * @description Get the fleet settigns and MOTD
     */
    get: operations["aacat_api_get_fleet_details"];
    /**
     * Put Fleet Details
     * @description Update fleet Free move and MOTD
     */
    put: operations["aacat_api_put_fleet_details"];
  };
  "/cat/api/fleets/{fleet_id}/kick/{character_id}": {
    /**
     * Kick Fleet Member
     * @description Kick character from fleet
     */
    delete: operations["aacat_api_kick_fleet_member"];
  };
  "/cat/api/fleets/{fleet_id}/invite/{character_id}": {
    /**
     * Invite Fleet Member
     * @description Invite a character to fleet
     */
    post: operations["aacat_api_invite_fleet_member"];
  };
  "/cat/api/fleets/{fleet_id}/move/{character_id}": {
    /**
     * Move Fleet Member
     * @description Move a character in fleet
     *
     * If a character is moved to the `fleet_commander` role,
     * **neither** `wing_id` or `squad_id` should be specified.
     *
     * If a character is moved to the `wing_commander` role,
     * **only** `wing_id` should be specified.
     *
     * If a character is moved to the `squad_commander` role,
     * **both** `wing_id` and `squad_id` should be specified.
     *
     * If a character is moved to the `squad_member` role,
     * **both** `wing_id` and `squad_id` should be specified.
     */
    put: operations["aacat_api_move_fleet_member"];
  };
  "/cat/api/fleets/{fleet_id}/structure": {
    /**
     * Get Fleet Structure
     * @description Get the fleet hierarchy
     * TODO Refactor this is way too big
     * TODO can prob share logic with the snapshot task
     */
    get: operations["aacat_api_get_fleet_structure"];
  };
  "/cat/api/fleets/{fleet_id}/wing": {
    /**
     * Create Wing
     * @description Create a wing in a fleet
     */
    post: operations["aacat_api_create_wing"];
  };
  "/cat/api/fleets/{fleet_id}/wing/{wing_id}": {
    /**
     * Rename Wing
     * @description Rename a Wing in a fleet
     */
    put: operations["aacat_api_rename_wing"];
    /**
     * Delete Wing
     * @description Delete a Wing in a fleet
     */
    delete: operations["aacat_api_delete_wing"];
  };
  "/cat/api/fleets/{fleet_id}/wing/{wing_id}/squad": {
    /**
     * Create Squad
     * @description Create a wing in a fleet
     */
    post: operations["aacat_api_create_squad"];
  };
  "/cat/api/fleets/{fleet_id}/squad/{squad_id}": {
    /**
     * Rename Squad
     * @description Rename a Wing in a fleet
     */
    put: operations["aacat_api_rename_squad"];
    /**
     * Delete Squad
     * @description Delete a Squad in a fleet
     */
    delete: operations["aacat_api_delete_squad"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** EveName */
    EveName: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      /** Cat */
      cat?: string | null;
      /** Cat Id */
      cat_id?: number | null;
    };
    /** Character */
    Character: {
      /** Corporation Id */
      corporation_id: number;
      /** Corporation Name */
      corporation_name: string;
      /** Alliance Id */
      alliance_id?: number | null;
      /** Alliance Name */
      alliance_name?: string | null;
      /** Character Name */
      character_name: string;
      /** Character Id */
      character_id: number;
    };
    /** FleetDetails */
    FleetDetails: {
      /** Name */
      name: string;
      boss: components["schemas"]["Character"];
      /** Eve Fleet Id */
      eve_fleet_id: number;
      /**
       * Start Time
       * Format: date-time
       */
      start_time: string;
      /**
       * Last Update
       * Format: date-time
       */
      last_update: string;
      /** End Time */
      end_time?: string | null;
    };
    /** Snapshot */
    Snapshot: {
      /**
       * Time
       * Format: date-time
       */
      time: string;
      /** Snapshot */
      snapshot: components["schemas"]["SnapshotCharacter"][];
    };
    /** SnapshotCharacter */
    SnapshotCharacter: {
      character: components["schemas"]["Character"];
      main?: components["schemas"]["Character"] | null;
      system: components["schemas"]["EveName"];
      ship: components["schemas"]["EveName"];
      /** Role */
      role: string;
      /**
       * Join Time
       * Format: date-time
       */
      join_time: string;
      /**
       * Distance
       * @default -2
       */
      distance?: number | null;
      /** Takes Fleet Warp */
      takes_fleet_warp?: boolean | null;
    };
    /** CharacterCount */
    CharacterCount: {
      character: components["schemas"]["Character"];
      /** Count */
      count: number;
    };
    /** CountResponse */
    CountResponse: {
      /** Name */
      name: string;
      /** Total */
      total: number;
      /**
       * Characters
       * @default []
       */
      characters?: components["schemas"]["CharacterCount"][] | null;
    };
    /**
     * FleetRoles
     * @enum {string}
     */
    FleetRoles: "fleet_commander" | "wing_commander" | "squad_commander" | "squad_member";
    /** FleetSquad */
    FleetSquad: {
      /** Squad Id */
      squad_id: number;
      /**
       * Name
       * @default
       */
      name?: string | null;
      /**
       * Characters
       * @default []
       */
      characters?: components["schemas"]["SnapshotCharacter"][] | null;
      commander?: components["schemas"]["SnapshotCharacter"] | null;
    };
    /** FleetStructure */
    FleetStructure: {
      fleet_boss: components["schemas"]["Character"];
      commander?: components["schemas"]["SnapshotCharacter"] | null;
      /**
       * Wings
       * @default []
       */
      wings?: components["schemas"]["FleetWing"][] | null;
    };
    /** FleetWing */
    FleetWing: {
      /** Wing Id */
      wing_id: number;
      /**
       * Name
       * @default
       */
      name?: string | null;
      /**
       * Squads
       * @default []
       */
      squads?: components["schemas"]["FleetSquad"][] | null;
      commander?: components["schemas"]["SnapshotCharacter"] | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
  /** System Search */
  aacat_api_system_search: {
    parameters: {
      query: {
        search_text: string;
        limit?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EveName"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /** Constellation Search */
  aacat_api_constellation_search: {
    parameters: {
      query: {
        search_text: string;
        limit?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EveName"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /** Region Search */
  aacat_api_region_search: {
    parameters: {
      query: {
        search_text: string;
        limit?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EveName"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /** Group Search */
  aacat_api_group_search: {
    parameters: {
      query: {
        search_text: string;
        limit?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["EveName"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /** Character Search */
  aacat_api_character_search: {
    parameters: {
      query: {
        search_text: string;
        limit?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Character"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Track Me
   * @description Track any fleeets currently being run by the logged in user.
   */
  aacat_api_track_me: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Character"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Track Character
   * @description Track the fleet being run by the character_id, if they are in a fleet.
   */
  aacat_api_track_character: {
    parameters: {
      path: {
        character_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Character"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * End Fleet
   * @description Stop Tracking a fleet.
   */
  aacat_api_end_fleet: {
    parameters: {
      path: {
        fleet_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string[];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Restart Fleet Tasks
   * @description Restart any fleet tasks that may have failed.
   */
  aacat_api_restart_fleet_tasks: {
    parameters: {
      path: {
        fleet_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string[];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Get Fleets Active
   * @description Show all actively tracked fleets
   */
  aacat_api_get_fleets_active: {
    parameters: {
      query?: {
        limit?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FleetDetails"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Get Fleets Recent
   * @description Show a list of previously tracked fleets
   */
  aacat_api_get_fleets_recent: {
    parameters: {
      query?: {
        days_look_back?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FleetDetails"][];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Get Fleet Recent Snapshot
   * @description Provide teh most recent snapshot of a fleet
   */
  aacat_api_get_fleet_recent_snapshot: {
    parameters: {
      path: {
        fleet_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Snapshot"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Get Fleet Stats
   * @description Provide the most recent snapshot of a fleet grouped by ship types etc.
   */
  aacat_api_get_fleet_stats: {
    parameters: {
      path: {
        fleet_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": unknown[];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Get Fleet Time Diff
   * @description Provide the rolling changes of a fleets comp in the time period
   */
  aacat_api_get_fleet_time_diff: {
    parameters: {
      path: {
        fleet_id: number;
        minutes: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": unknown[];
        };
      };
    };
  };
  /**
   * Get Fleet Time Diff Mains
   * @description Provide the rolling changes of a fleets members in the time period
   */
  aacat_api_get_fleet_time_diff_mains: {
    parameters: {
      path: {
        fleet_id: number;
        minutes: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
  /**
   * Get Fleet Character Changes
   * @description Provide an overview of fleet members who have left/joined late
   */
  aacat_api_get_fleet_character_changes: {
    parameters: {
      query?: {
        ratio_cutoff?: number;
      };
      path: {
        fleet_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["CountResponse"][];
        };
      };
    };
  };
  /**
   * Get Fleet Id From Character Id
   * @description Get the fleet id a character is in.
   */
  aacat_api_get_fleet_id_from_character_id: {
    parameters: {
      path: {
        character_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": number;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Not Found */
      404: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Get Fleet Details
   * @description Get the fleet settigns and MOTD
   */
  aacat_api_get_fleet_details: {
    parameters: {
      path: {
        fleet_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Put Fleet Details
   * @description Update fleet Free move and MOTD
   */
  aacat_api_put_fleet_details: {
    parameters: {
      query?: {
        free_move?: boolean;
        motd?: string;
      };
      path: {
        fleet_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Kick Fleet Member
   * @description Kick character from fleet
   */
  aacat_api_kick_fleet_member: {
    parameters: {
      path: {
        fleet_id: number;
        character_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Invite Fleet Member
   * @description Invite a character to fleet
   */
  aacat_api_invite_fleet_member: {
    parameters: {
      path: {
        fleet_id: number;
        character_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Move Fleet Member
   * @description Move a character in fleet
   *
   * If a character is moved to the `fleet_commander` role,
   * **neither** `wing_id` or `squad_id` should be specified.
   *
   * If a character is moved to the `wing_commander` role,
   * **only** `wing_id` should be specified.
   *
   * If a character is moved to the `squad_commander` role,
   * **both** `wing_id` and `squad_id` should be specified.
   *
   * If a character is moved to the `squad_member` role,
   * **both** `wing_id` and `squad_id` should be specified.
   */
  aacat_api_move_fleet_member: {
    parameters: {
      query: {
        role: "fleet_commander" | "wing_commander" | "squad_commander" | "squad_member";
        squad_id?: number;
        wing_id?: number;
      };
      path: {
        fleet_id: number;
        character_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": string;
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Get Fleet Structure
   * @description Get the fleet hierarchy
   * TODO Refactor this is way too big
   * TODO can prob share logic with the snapshot task
   */
  aacat_api_get_fleet_structure: {
    parameters: {
      path: {
        fleet_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["FleetStructure"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": string;
        };
      };
      /** @description Unauthorized */
      401: {
        content: {
          "application/json": string;
        };
      };
      /** @description Forbidden */
      403: {
        content: {
          "application/json": string;
        };
      };
      /** @description Internal Server Error */
      500: {
        content: {
          "application/json": string;
        };
      };
      /** @description Gateway Timeout */
      504: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /**
   * Create Wing
   * @description Create a wing in a fleet
   */
  aacat_api_create_wing: {
    parameters: {
      path: {
        fleet_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Rename Wing
   * @description Rename a Wing in a fleet
   */
  aacat_api_rename_wing: {
    parameters: {
      query: {
        name: string;
      };
      path: {
        fleet_id: number;
        wing_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Delete Wing
   * @description Delete a Wing in a fleet
   */
  aacat_api_delete_wing: {
    parameters: {
      path: {
        fleet_id: number;
        wing_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Create Squad
   * @description Create a wing in a fleet
   */
  aacat_api_create_squad: {
    parameters: {
      path: {
        fleet_id: number;
        wing_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Rename Squad
   * @description Rename a Wing in a fleet
   */
  aacat_api_rename_squad: {
    parameters: {
      query: {
        name: string;
      };
      path: {
        fleet_id: number;
        squad_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
  /**
   * Delete Squad
   * @description Delete a Squad in a fleet
   */
  aacat_api_delete_squad: {
    parameters: {
      path: {
        fleet_id: number;
        squad_id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: never;
      };
    };
  };
}
